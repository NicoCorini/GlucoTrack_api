// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace GlucoTrack_api.Models;

public partial class GlucoTrackDBContext : DbContext
{
    public GlucoTrackDBContext()
    {
    }

    public GlucoTrackDBContext(DbContextOptions<GlucoTrackDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<TabAlert> TabAlert { get; set; }

    public virtual DbSet<TabAlertUtentiDestinatari> TabAlertUtentiDestinatari { get; set; }

    public virtual DbSet<TabAssunzioniFarmaci> TabAssunzioniFarmaci { get; set; }

    public virtual DbSet<TabComorbiditaPazienti> TabComorbiditaPazienti { get; set; }

    public virtual DbSet<TabFattoriRischio> TabFattoriRischio { get; set; }

    public virtual DbSet<TabLogModifiche> TabLogModifiche { get; set; }

    public virtual DbSet<TabMedici> TabMedici { get; set; }

    public virtual DbSet<TabMisurazioniGlicemia> TabMisurazioniGlicemia { get; set; }

    public virtual DbSet<TabPatologie> TabPatologie { get; set; }

    public virtual DbSet<TabPazienti> TabPazienti { get; set; }

    public virtual DbSet<TabPazientiFattoriRischio> TabPazientiFattoriRischio { get; set; }

    public virtual DbSet<TabPazientiMedici> TabPazientiMedici { get; set; }

    public virtual DbSet<TabProgrammazioneAssunzioni> TabProgrammazioneAssunzioni { get; set; }

    public virtual DbSet<TabRuoli> TabRuoli { get; set; }

    public virtual DbSet<TabSintomi> TabSintomi { get; set; }

    public virtual DbSet<TabTerapie> TabTerapie { get; set; }

    public virtual DbSet<TabTipologieAlert> TabTipologieAlert { get; set; }

    public virtual DbSet<TabTipologieMisurazioni> TabTipologieMisurazioni { get; set; }

    public virtual DbSet<TabTipologiePasti> TabTipologiePasti { get; set; }

    public virtual DbSet<TabUtenti> TabUtenti { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=127.0.0.1,1433;Initial Catalog=GlucoTrackDB;Persist Security Info=True;User ID=sa;Password=baseBase100;Encrypt=False;TrustServerCertificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<TabAlert>(entity =>
        {
            entity.HasKey(e => e.IdAlert).HasName("PK__TabAlert__BCD48A58A89FDA6F");

            entity.Property(e => e.CreatoIl).HasColumnType("datetime");
            entity.Property(e => e.Messaggio)
                .IsRequired()
                .HasColumnType("text");
        });

        modelBuilder.Entity<TabAlertUtentiDestinatari>(entity =>
        {
            entity.HasKey(e => e.IdAlertUtentiDestinatari).HasName("PK__TabAlert__CE259670426A9D56");

            entity.Property(e => e.Letto).HasDefaultValue(false);
            entity.Property(e => e.LettoIl).HasColumnType("datetime");
        });

        modelBuilder.Entity<TabAssunzioniFarmaci>(entity =>
        {
            entity.HasKey(e => e.IdAssunzioneFarmaco).HasName("PK__TabAssun__3A8E0950E787C139");

            entity.Property(e => e.AssuntoIl).HasColumnType("datetime");
            entity.Property(e => e.Note).HasColumnType("text");
            entity.Property(e => e.QuantitaPrevistaValore).HasColumnType("numeric(8, 2)");
            entity.Property(e => e.UnitaMisura)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TabComorbiditaPazienti>(entity =>
        {
            entity.HasKey(e => e.IdComorbiditaPaziente).HasName("PK__TabComor__7F537BA4E6EB7899");

            entity.Property(e => e.Comorbidita)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TabFattoriRischio>(entity =>
        {
            entity.HasKey(e => e.IdFattoreRischio).HasName("PK__TabFatto__8B2469FE4B6094D5");

            entity.HasIndex(e => e.Nome, "UQ__TabFatto__7D8FE3B2A8363282").IsUnique();

            entity.Property(e => e.Descrizione).HasColumnType("text");
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TabLogModifiche>(entity =>
        {
            entity.HasKey(e => e.IdLog).HasName("PK__TabLogMo__0C54DBC6F1D11590");

            entity.Property(e => e.Azione)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.TabellaNome)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Timestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<TabMedici>(entity =>
        {
            entity.HasKey(e => e.IdMedico).HasName("PK__TabMedic__C326E6526481F8A3");

            entity.HasIndex(e => e.IdUtente, "UQ__TabMedic__0816694ADE4786EB").IsUnique();

            entity.Property(e => e.Cognome).HasMaxLength(50);
            entity.Property(e => e.Nome).HasMaxLength(50);
            entity.Property(e => e.OspedaleAffiliazione)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Specializzazione)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TabMisurazioniGlicemia>(entity =>
        {
            entity.HasKey(e => e.IdMisurazioneGlicemia).HasName("PK__TabMisur__FFD8C2937D469BC6");

            entity.Property(e => e.MisuratoIl).HasColumnType("datetime");
            entity.Property(e => e.Note).HasColumnType("text");
        });

        modelBuilder.Entity<TabPatologie>(entity =>
        {
            entity.HasKey(e => e.IdPatologia).HasName("PK__TabPatol__6D573A32FAE1134C");

            entity.Property(e => e.Dal).HasColumnType("datetime");
            entity.Property(e => e.Descrizione)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TabPazienti>(entity =>
        {
            entity.HasKey(e => e.IdPaziente).HasName("PK__TabPazie__D3554BAAC4872BC1");

            entity.HasIndex(e => e.IdUtente, "UQ__TabPazie__0816694AD496F801").IsUnique();

            entity.Property(e => e.Altezza).HasColumnType("numeric(5, 2)");
            entity.Property(e => e.CodiceFiscale)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.Peso).HasColumnType("numeric(5, 2)");
            entity.Property(e => e.Sesso).HasMaxLength(50);
        });

        modelBuilder.Entity<TabPazientiFattoriRischio>(entity =>
        {
            entity.HasKey(e => e.IdPazienteFattoreRischio).HasName("PK__TabPazie__17D4F54D7D64F329");
        });

        modelBuilder.Entity<TabPazientiMedici>(entity =>
        {
            entity.HasKey(e => e.IdPazienteMedico).HasName("PK__TabPazie__662F2A960D4ED1EB");
        });

        modelBuilder.Entity<TabProgrammazioneAssunzioni>(entity =>
        {
            entity.HasKey(e => e.IdProgrammazione).HasName("PK__TabProgr__10031528D4596F05");

            entity.Property(e => e.DataOraPrevista).HasColumnType("datetime");
            entity.Property(e => e.Farmaco)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.QuantitaPrevistaN).HasColumnType("numeric(8, 2)");
            entity.Property(e => e.QuantitaPrevistaUn)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TabRuoli>(entity =>
        {
            entity.HasKey(e => e.IdRuolo).HasName("PK__TabRuoli__5F37071D497E8BB5");

            entity.HasIndex(e => e.NomeRuolo, "UQ__TabRuoli__5663F8FCA8988C21").IsUnique();

            entity.Property(e => e.NomeRuolo)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TabSintomi>(entity =>
        {
            entity.HasKey(e => e.IdSintomo).HasName("PK__TabSinto__FF5EADBFC035E555");

            entity.Property(e => e.AvvenutoIl).HasColumnType("datetime");
            entity.Property(e => e.Descrizione)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TabTerapie>(entity =>
        {
            entity.HasKey(e => e.IdTerapia).HasName("PK__TabTerap__EC02E57C19850029");

            entity.Property(e => e.AggiornatoIl).HasColumnType("datetime");
            entity.Property(e => e.CreatoIl).HasColumnType("datetime");
            entity.Property(e => e.Indicazioni).HasColumnType("text");
        });

        modelBuilder.Entity<TabTipologieAlert>(entity =>
        {
            entity.HasKey(e => e.IdTipologiaAlert).HasName("PK__TabTipol__8373FF9BD024AFF5");

            entity.HasIndex(e => e.Codice, "UQ__TabTipol__0636EC1D5FBFB804").IsUnique();

            entity.Property(e => e.Codice)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Descrizione).HasColumnType("text");
        });

        modelBuilder.Entity<TabTipologieMisurazioni>(entity =>
        {
            entity.HasKey(e => e.IdTipologiaMisurazione).HasName("PK__TabTipol__38C9CC03185898C5");

            entity.HasIndex(e => e.Nome, "UQ__TabTipol__7D8FE3B216C2DBB1").IsUnique();

            entity.Property(e => e.Descrizione).HasColumnType("text");
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TabTipologiePasti>(entity =>
        {
            entity.HasKey(e => e.IdTipologiaPasto).HasName("PK__TabTipol__58FC87BA83EB411E");

            entity.HasIndex(e => e.Nome, "UQ__TabTipol__7D8FE3B221F60E01").IsUnique();

            entity.Property(e => e.Descrizione).HasColumnType("text");
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TabUtenti>(entity =>
        {
            entity.HasKey(e => e.IdUtente).HasName("PK__TabUtent__0816694B0F442A10");

            entity.HasIndex(e => e.NomeUtente, "UQ__TabUtent__599A34B41EDBC570").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__TabUtent__A9D105349FE1F51D").IsUnique();

            entity.Property(e => e.Cognome)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CreatoIl).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.HashPassword)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Nome)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.NomeUtente)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.UltimoAccesso).HasColumnType("datetime");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}